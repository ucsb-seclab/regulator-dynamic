apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: aa2fbaff-98da-471c-9a67-19029781eddf
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-storage-volume
  labels:
    name: postgres-storage-volume
spec:
  storageClassName: ""
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.3
    path: /srv/nfs/foo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-storage-claim
  labels:
    app: postgres
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  selector:
    matchLabels:
      name: postgres-storage-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-server
  template:
    metadata:
      labels:
        app: postgres-server
    spec:
      containers:
        - name: postgres-server
          image: postgres:12.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: PGDATA
              value: '/mnt/my-nfs/pg_data'
          volumeMounts:
            - mountPath: /mnt/my-nfs
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-storage-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres-server
spec:
  type: NodePort
  ports:
  - port: 5432
  selector:
    app: postgres-server
